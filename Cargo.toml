[workspace]

members = ["taidan_proc_macros", "taidan_catalogue_parser"]

[package]
name = "taidan"
version = "0.1.9"
edition = "2021"
description = "Out-Of-Box-Experience (OOBE) and Welcome App"
license = "GPL-2.0-or-later"
repository = "https://github.com/Ultramarine-Linux/taidan"
readme = "README.md"
keywords = ["oobe", "ultramarine", "linux"]

[dependencies]
color-eyre = "0.6.3"
const_format = "0.2.34"
enum_dispatch = "0.3.13"
futures = "0.3.31"
gettext-rs = { version = "0.7.2", features = ["gettext-system"] }
itertools = "0.14.0"
kurage = { version = "0.1.0" }
libhelium = "0.10.0"
paste = "1.0.15"
phf = { version = "0.11.2", features = ["macros"] }
relm4 = { version = "0.9.1", default-features = false, features = ["macros"] }
reqwest = { version = "0.12.9", features = [
    "http2",
    "native-tls",
], default-features = false }
taidan_catalogue_parser = { path = "taidan_catalogue_parser" }
taidan_proc_macros = { path = "taidan_proc_macros" }
tempfile = "3.14.0"
tokio = { version = "1.42.0", features = [
    "fs",
    "io-util",
    "macros",
    "process",
] }
toml_edit = "0.22.22"
tracing = "0.1.41"
tracing-appender = "0.2.3"
tracing-error = "0.2.1"
tracing-journald = "0.3.1"
tracing-subscriber = { version = "0.3.19", features = [
    "env-filter",
    "tracing-log",
] }
uzers = "0.12.1"
xcrypt = "0.3.0"

[build-dependencies]
glib-build-tools = "0.20.0"

[lints.clippy]
# cargo = { level = "warn", priority = -1 }
complexity = { level = "warn", priority = -1 }
nursery = { level = "warn", priority = -1 }
pedantic = { level = "warn", priority = -1 }
suspicious = { level = "warn", priority = -1 }

disallowed-macros = "deny"
excessive-nesting = "warn"

arithmetic_side_effects = "warn"
assertions_on_result_states = "warn"
clone_on_ref_ptr = "warn"
create_dir = "warn"
empty_enum_variants_with_brackets = "warn"
empty_structs_with_brackets = "warn"
field_scoped_visibility_modifiers = "deny"
format_push_string = "warn"
get_unwrap = "warn"
if_then_some_else_none = "warn"
impl_trait_in_params = "warn"
indexing_slicing = "warn"
infinite_loop = "deny"
let_underscore_must_use = "deny"
let_underscore_untyped = "warn"
# multiple_inherent_impl = "warn"
needless_raw_strings = "warn"
rc_buffer = "warn"
rc_mutex = "deny"
redundant_type_annotations = "warn"
renamed_function_params = "warn"
rest_pat_in_fully_bound_structs = "warn"
semicolon_outside_block = "warn"
str_to_string = "warn"
string_lit_chars_any = "warn"
string_to_string = "warn"
tests_outside_test_module = "warn"
todo = "warn"
try_err = "warn"
undocumented_unsafe_blocks = "deny"
unimplemented = "warn"
unneeded_field_pattern = "warn"
unwrap_in_result = "warn"
